{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","_useState","useState","_useState2","_slicedToArray","movieTitle","setMovieTitle","_useState3","_useState4","setMovie","_useState5","_useState6","isDisabled","setIsDisabled","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","isError","setIsError","_Fragment","onSubmit","event","query","preventDefault","fetch","concat","then","res","json","catch","Response","Error","data","Title","Plot","Poster","imdbID","finally","htmlFor","value","onChange","target","length","type","id","placeholder","classNames","disabled","onClick","App","setMovies","item","includes","prevMovieList","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1374305e.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    movie && (\n      <div className=\"card\" data-cy=\"movieCard\">\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              data-cy=\"moviePoster\"\n              src={movie?.imgUrl}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"images/imdb-logo.jpeg\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\" data-cy=\"movieDescription\">\n            {movie?.description}\n            <br />\n            <a href={movie?.imdbUrl} data-cy=\"movieURL\">\n              IMDB\n            </a>\n          </div>\n        </div>\n      </div>\n    )\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\n// import { ResponseError } from '../../types/ReponseError';\n// import { MovieData } from '../../types/MovieData';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Prop = {\n  addMovie: (a: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Prop> = ({ addMovie }) => {\n  const [movieTitle, setMovieTitle] = useState<string>('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const handleSearchInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsError(false);\n    setMovieTitle(event.target.value);\n\n    if (event.target.value.length) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n  };\n\n  const handleSearchRequest = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n    getMovie(movieTitle)\n      .then(data => {\n        if ('Error' in data) {\n          setIsError(true);\n        }\n\n        if ('Title' in data) {\n          setMovie({\n            title: data.Title,\n            description: data.Plot,\n            imgUrl: data.Poster === 'N/A'\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : data.Poster,\n            imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n            imdbId: data.imdbID,\n          });\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSearchRequest}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={movieTitle}\n              onChange={handleSearchInput}\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': isError })}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={isDisabled}\n            >\n              {movie ? 'Search again ' : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  if (movie) {\n                    addMovie(movie);\n                    setMovieTitle('');\n                    setIsDisabled(true);\n                    setMovie(null);\n                  }\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=a3adb9be';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovieToList = (movie: Movie) => {\n    const movieIdList = movies.map(item => item.imdbId);\n\n    if (!movieIdList.includes(movie.imdbId)) {\n      setMovies((prevMovieList) => [...prevMovieList, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={handleAddMovieToList}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}